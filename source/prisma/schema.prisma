datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                      Int                 @id @default(autoincrement())
    firstname               String              @db.VarChar(255)
    lastname                String              @db.VarChar(255)
    email                   String              @unique 
    password                String              
    tel                     String              @unique 
    region                  String              @db.VarChar(255) @default("unknow")
    pays                    String              @db.VarChar(255)
    role                    Role                @default(SELLER)
    product_preference      String?             @db.VarChar(255)
    profile_url             String?
    adress                  String?             @db.VarChar(255)
    code_postal             String?             
    reaction                Reaction[]
    posts                   Post[]
    command                 Command[]
    comment                 Comment[]
    sentMessage             Message[]           @relation("MessageSender")
    receivedMessage         Message[]           @relation("MessageReceiver")
}

model Admin {
    id                      Int                 @id @default(autoincrement())
    firstname               String              @db.VarChar(255)
    lastname                String              @db.VarChar(255)
    email                   String              @unique
    password                String              
    tel                     String              @unique            
    pays                    String              @db.VarChar(255)
    adress                  String              @db.VarChar(255)
    code_postal             String?
    deleted_post            DeletedPost[]
}

model Message {
    id                      Int                 @id @default(autoincrement())
    id_expediteur           Int
    id_receiveur            Int
    content                 String              @db.Text
    room_id                 String              @db.VarChar(255)
    sending_date            DateTime            @default(now())
    sender                  User                @relation("MessageSender",fields: [id_expediteur],references: [id])
    receiver                User                @relation("MessageReceiver",fields: [id_receiveur],references: [id])
}

model Post {
    id                      Int                 @id @default(autoincrement())
    type                    TypePost            @default(ARTICLE)
    description             String
    unit_price              Float?               
    stock                   Int?
    create_at               DateTime            @default(now())
    image_url               String?  
    id_user                 Int                 
    user                    User                @relation(fields: [id_user],references: [id])
    reaction                Reaction[]
    command                 Command[]
    delete_post             DeletedPost[]
    comment                 Comment[]
}

model Reaction {
    id                      Int                 @id @default(autoincrement())
    id_post                 Int
    id_user                 Int                  
    post                    Post                @relation(fields: [id_post],references: [id])
    user                    User                @relation(fields: [id_user],references: [id])
}

model Comment {
    id                      Int                 @id @default(autoincrement())
    content                 String              
    id_post                 Int
    id_user                 Int                 
    date                    DateTime            @default(now())
    post                    Post                @relation(fields: [id_post],references: [id])
    user                    User                @relation(fields: [id_user],references: [id])
}

enum TypePost {
    ARTICLE
    SIMPLE_POST
}

model Command {
    id                      Int                 @id @default(autoincrement())
    id_article              Int                 
    id_client               Int                 
    date_command            DateTime            @default(now())
    status                  CommadStatus
    article                 Post                @relation(fields: [id_article],references: [id])
    user                    User                @relation(fields: [id_client],references: [id])
    delivery                Delivery[]            
}

enum CommadStatus {
    EN_ATTEND_CONFIRMATION
    LIVRAISON_EN_COURS
}

model DeletedPost {
    id                      Int                 @id @default(autoincrement())
    id_admin                Int
    id_post                 Int
    delete_at               DateTime            @default(now())
    reason                  String
    post                    Post                @relation(fields: [id_post],references: [id])
    admin                   Admin               @relation(fields: [id_admin],references: [id])
}

model Delivery {
    id                      Int                 @id @default(autoincrement())
    id_commnad              Int
    delivery_date           DateTime            
    status                  DeliveryStatus      
    starting_adresse        String              
    arrival_adresse         String
    time_limit              Float
    command                 Command             @relation(fields: [id_commnad],references: [id])
}

enum DeliveryStatus {
    BEFORE_EXPEDIE
    VERIFICATION
    EXPEDIE
    EN_COURS
    RETOUR
    LIVRE
}

enum Role {
    SELLER
    BUYER
}
